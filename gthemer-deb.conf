# This is the config file for creating debian packages
# 


[control]
#This section determines what goes in debian/control file of the deb package.
# The name of the package
Package=gthemer
# This is also the name of the package, only used if this is a source package
;Source=
# The version of the package
Version = 0.3
# Application area in which the package has been classified, i.e. games, graphics, internet, etc.
Section=tools
# The priority of the package, i.e. required, important, standard, optional, extras
Priority=optional
# The architecture this build is for
Architecture=all
# Boolean (yes/no) whether this is an essential package. If set to yes, the package manager will refuse to remove it.
;Essential=
# Set your dependencies here
Depends=python-gir, python-lxml, python(=2.7), gtk3
# This declares a strong, but not absolute, dependency
;Recommends=
# This is used to declare that one package may be more useful with one or more others
;Suggests=
# This field is similar to Suggests but works in the opposite direction
;Enchances=
# This field is like Depends, except that it also forces dpkg to complete installation of the packages named before even starting the installation of the package which declares the pre-dependency
;Pre-Depends=
#The package maintainers name and email address. The name must come first, then the email address inside angle brackets <>
Maintainer=Wesley Hansen <wesrhansen@gmail.com>
# A description of the package. Enter a short description as the first line, then continue with a long explanation on subsequent lines.
Description = Create custom syntax highlight themes for gedit.
# Project Homepage
;Homepage=
# Some binary packages incorporate parts of other packages when built but do not have to depend on those packages. Examples include linking with static libraries or incorporating source code from another package during the build. In this case, the source packages of those other packages are a required part of the complete source (the binary package is not reproducible without them).
;Built-Using=
# The person who made this version. Format is the same as for Maintainer, but they do not have to be the same.
;Changed-By=

[scripts]
# Filename and path to a script ran BEFORE the installation
;preinst=mypackage/script_1.py
# Filename and path to a script ran AFTER the installation
;postinst=
# Filename and path to a script ran BEFORE the uninstallation
;prerm=
# Filename and path to a script ran AFTER the uninstallation
;postrm=


# This section is the manifest that determines what files are included and excluded
# in this project.
# This section contains the operations: include, exclude, recursive-include, and recursive-exclude.
# Each operation can have one or more comma delimitted filepaths or wildcard patterns to
# define what files should be considered for inclusion/exclusion in this package.
[rules]
#include = 
#exclude = 
recursive-include = docs/, lib/, ui/, images/, gthemer
recursive-exclude = *.pyc


# The destination section maps out where files in your project space should end
# up in the filesystem when the package is installed. 
# 'src' is a current filepath or directory, relative (to project dir) or absolute
# 'dest' is the destination the files listed in src should end up in the
# the filesystem that would install this package.
# Provide any number of "src=dest" values in this section to satisfy your
# installation needs
[destinations]
# src=dest
gthemer/=/usr/share/gthemer/
